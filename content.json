[{"title":"客户端回滚机制","date":"2017-06-20T13:10:30.000Z","path":"2017/06/20/客户端回滚机制/","text":"业务场景：1某一次客户端的上线，可能由于场景的原因或者其他原因导致 用户在某一种业务场景下，App大批量的崩溃，以至于影响用户的正常使用，为了解决情况，客户端继续引入一种解决方案——客户端回滚机制 回滚机制：说白了就是在一部分用户使用线上版本大批量的崩溃，且无法使用热修复来快速解决这些崩溃，影响这些用户正常使用时，我们需要让这批用户切回到上一个版本，不影响他们目前的正常使用。当我们的对于线上bug 修复后，又让这批用户切回到我们的最新版本。 回滚原理：1. 客户端将崩溃的日志记录下来，并发送给服务器 2. 上线后RD根据崩溃类型，来进行后台的设置，对某一种类型的崩溃需要版本的回滚 3. 服务器端收到这种类型的崩溃时，给客户端返回新的下载链接，去下载需要回滚的应用包 4. RD在bug 修复后，进行服务器端的设置，来返回无bug的应用。 回滚流程：![logo](客户端回滚机制/ClientRollbackMechanism.png) 总结： 回滚只是一种机制，在线上迫不得已的情况下使用，目的只是为了不影响某些机型，某些场景下用户的体验和使用，来提高用户的体验","tags":[{"name":"移动端","slug":"移动端","permalink":"http://yuanmenglong.cn/tags/移动端/"}]},{"title":"分享","date":"2017-06-20T08:53:11.000Z","path":"2017/06/20/分享/","text":"","tags":[]},{"title":"安装hexo过程","date":"2017-05-22T12:12:05.000Z","path":"2017/05/22/hello-world/","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. 开始啦Quick StartCreate a new posttestest1#### Create a new post Pos 人 start1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","tags":[]},{"title":"hexo 安装使用详解","date":"2016-05-22T05:30:51.000Z","path":"2016/05/22/hexo-安装使用详解/","text":"","tags":[]}]